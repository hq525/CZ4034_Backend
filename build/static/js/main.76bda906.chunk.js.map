{"version":3,"sources":["utils/API.js","utils/config.js","App.js","reportWebVitals.js","index.js"],"names":["API","path","Promise","resolve","reject","axios","get","then","response","data","catch","error","ENDPOINT","attractions","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","root","width","backgroundColor","palette","background","paper","inline","display","App","classes","useState","suggestions","setSuggestions","autocompleteLoading","setAutocompleteLoading","React","open","setOpen","loading","setLoading","searchTerm","setSearchTerm","currentSearchTerm","setCurrentSearchTerm","reviews","setReviews","rowsPerPage","setRowsPerPage","start","setStart","maxRowIndex","setMaxRowIndex","sortCriteria","setSortCriteria","sortDirection","setSortDirection","sentimentFilter","setSentimentFilter","attractionFilter","setAttractionFilter","usefulnessFilter","setUsefulnessFilter","errorBarOpen","setErrorBarOpen","errorText","setErrorText","dialogOpen","setDialogOpen","useEffect","term","createSelectQuery","baseQuery","handleChangeStart","newStart","docs","numFound","setError","text","closeError","handleSearchTermChange","e","newValue","target","value","suggest","mySuggester","className","style","marginTop","justifyContent","alignItems","border","padding","borderColor","Autocomplete","freeSolo","onOpen","onClose","disableClearable","onChange","event","options","map","suggestion","renderInput","params","TextField","label","variant","InputProps","type","endAdornment","Fragment","CircularProgress","color","size","IconButton","onClick","FormControl","InputLabel","Select","previousRowsPerPage","MenuItem","height","List","review","ListItem","button","disableRipple","ListItemAvatar","Avatar","src","reviewerProfilePicURL","ListItemText","primary","Typography","component","reviewTitle","Rating","ratings","readOnly","attractionName","secondary","reviewerName","Date","reviewDate","toLocaleDateString","reviewText","Link","href","reviewURL","Fab","marginLeft","id","Divider","length","disabled","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","aria-label","fontSize","Dialog","DialogTitle","DialogContent","dividers","FormLabel","RadioGroup","FormControlLabel","control","Radio","attraction","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76bda906.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default class API {\r\n  get(path) {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(path)\r\n        .then((response) => {\r\n          resolve(response.data);\r\n        })\r\n        .catch((error) => {\r\n          reject(error.response);\r\n        });\r\n    });\r\n  }\r\n}\r\n","export const ENDPOINT = 'http://35.240.203.21:8983'; ","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  TextField,\n  IconButton,\n  CircularProgress,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Typography,\n  Snackbar,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Link,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Fab\n} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport API from \"./utils/API\"\nimport { ENDPOINT } from \"./utils/config\"\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst attractions = [\n  \"All\",\n  \"ArtScience Museum at Marina Bay Sands\",\n  \"Gardens by the Bay\",\n  \"Jurong Bird Park\",\n  \"National Orchid Garden\",\n  \"Singapore Cable Car\",\n  \"Flower Dome\",\n  \"National Museum of Singapore\",\n  \"Sands Skypark Observation Deck\",\n  \"Singapore Botanic Gardens\",\n  \"Asian Civilisations Museum\",\n  \"Singapore Flyer\",\n  \"Singapore Zoo\",\n  \"Supertree Grove\",\n  \"Cloud Forest\",\n  \"Night Safari\",\n  \"Jewel Changi Airport\"\n];\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  root: {\n    width: '60vw',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [suggestions, setSuggestions] = useState([])\n  const [autocompleteLoading, setAutocompleteLoading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentSearchTerm, setCurrentSearchTerm] = useState(\"\");\n  const [reviews, setReviews] = useState([]);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [start, setStart] = useState(0);\n  const [maxRowIndex, setMaxRowIndex] = useState(0);\n  \n  const [sortCriteria, setSortCriteria] = useState(\"none\");\n  const [sortDirection, setSortDirection] = useState(\"desc\");\n  const [sentimentFilter, setSentimentFilter] = useState(\"All\")\n  const [attractionFilter, setAttractionFilter] = useState(\"All\")\n  const [usefulnessFilter, setUsefulnessFilter] = useState(\"All\");\n\n  const [errorBarOpen, setErrorBarOpen] = React.useState(false);\n  const [errorText, setErrorText] = React.useState('');\n\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n\n  useEffect(() => {\n    if (autocompleteLoading) {\n      setSuggestions([{term: 'Loading...'}]);\n    }\n  }, [autocompleteLoading]);\n\n  const createSelectQuery = (baseQuery) => {\n    if (sortCriteria !== \"none\") {\n      baseQuery += `&sort=${sortCriteria} ${sortDirection}`\n    }\n    if (sentimentFilter !== \"All\") {\n      baseQuery += `&fq=sentimentCategory:${sentimentFilter}`\n    }\n    if (attractionFilter !== \"All\") {\n      baseQuery += `&fq=attractionName:\"${attractionFilter}\"`\n    }\n    if (usefulnessFilter !== \"All\") {\n      baseQuery += `&fq=usefulness:${usefulnessFilter}`\n    }\n    return baseQuery\n  }\n\n  const handleChangeStart = (newStart) => {\n    setLoading(true);\n    let api = new API();\n    api\n    .get(createSelectQuery(`${ENDPOINT}/solr/reviews/select?q=${currentSearchTerm ? currentSearchTerm : '*:*'}&rows=${rowsPerPage}&start=${newStart}`))\n    .then((data) => {\n      setStart(newStart);\n      setReviews(data.response.docs)\n      setMaxRowIndex(data.response.numFound - 1)\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(\"Something went wrong\")\n      setLoading(false);\n    })\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    var previousRowsPerPage = rowsPerPage\n    setRowsPerPage(event.target.value)\n    setLoading(true);\n    let api = new API();\n    api\n    .get(createSelectQuery(`${ENDPOINT}/solr/reviews/select?q=${currentSearchTerm ? currentSearchTerm : '*:*'}&rows=${event.target.value}&start=0`))\n    .then((data) => {\n      setStart(0);\n      setReviews(data.response.docs)\n      setMaxRowIndex(data.response.numFound - 1);\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(\"Something went wrong\")\n      setRowsPerPage(previousRowsPerPage);\n      setLoading(false);\n    })\n  }\n\n  const handleClose = () => {\n    setDialogOpen(false);\n    if (reviews.length > 0) {\n      setLoading(true);\n      let api = new API();\n      api\n      .get(createSelectQuery(`${ENDPOINT}/solr/reviews/select?q=${currentSearchTerm ? currentSearchTerm : '*:*'}&rows=${rowsPerPage}&start=0`))\n      .then((data) => {\n        setStart(0);\n        setReviews(data.response.docs);\n        setMaxRowIndex(data.response.numFound-1)\n        setLoading(false);\n      })\n      .catch((error) => {\n        setError(\"Something went wrong\")\n        setLoading(false);\n      })\n    }\n  }\n\n  const handleSearch = () => {\n    setLoading(true);\n    let api = new API();\n    api\n    .get(createSelectQuery(`${ENDPOINT}/solr/reviews/select?q=${searchTerm ? searchTerm : '*:*'}&rows=${rowsPerPage}&start=0`))\n    .then((data) => {\n      setStart(0);\n      setCurrentSearchTerm(searchTerm);\n      setReviews(data.response.docs);\n      setMaxRowIndex(data.response.numFound-1)\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(\"Something went wrong\")\n      setLoading(false);\n    })\n  }\n\n  const setError = (text) => {\n    setErrorText(text);\n    setErrorBarOpen(true);\n  }\n\n  const closeError = () => {\n    setErrorBarOpen(false);\n  }\n\n  const handleSearchTermChange = (e, newValue) => {\n    setSearchTerm(e.target.value);\n    if (e.target.value === \"\") {\n      setSuggestions([]);\n    } else {\n      setAutocompleteLoading(true);\n      let api = new API();\n      api\n      .get(`${ENDPOINT}/solr/reviews/suggest?q=${e.target.value}&rows=10`)\n      .then((data) => {\n        setAutocompleteLoading(false);\n        setSuggestions(data.suggest.mySuggester[`${e.target.value}`].suggestions)\n      })\n      .catch((error) => {\n        setAutocompleteLoading(false);\n        setSuggestions([]);\n      })\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Body\">\n        <div style={{marginTop: \"10px\"}} />\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"60vw\", border: \"1px solid\", padding: \"10px\", borderColor: 'black'}}>\n          <Autocomplete\n          style={{width: \"100%\"}}\n          freeSolo\n          open={open}\n          onOpen={() => {\n            setOpen(true);\n          }}\n          onClose={() => {\n            setOpen(false);\n          }}\n          disableClearable\n          value={searchTerm}\n          onChange={(event, newValue) => {\n            setSearchTerm(newValue);\n          }}\n          options={suggestions.map((suggestion) => suggestion.term)}\n          loading={autocompleteLoading}\n          renderInput={(params) => (\n            <TextField\n              style={{margin: \"0px\"}}\n              {...params}\n              label=\"Search\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={searchTerm}\n              onChange={handleSearchTermChange}\n              InputProps={{ \n                ...params.InputProps, \n                type: 'search',\n                endAdornment: (\n                  <React.Fragment>\n                    {autocompleteLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}\n          />\n          <IconButton onClick={handleSearch}>\n            <SearchIcon />\n          </IconButton>\n        </div>\n        <div style={{width: \"60vw\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n          <h1>Reviews</h1>\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel>Rows</InputLabel>\n              <Select\n                value={rowsPerPage}\n                onChange={handleChangeRowsPerPage}\n                label=\"Rows\"\n              >\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n              </Select>\n            </FormControl>\n            <IconButton onClick={() => {setDialogOpen(true)}}>\n              <FilterListIcon />\n            </IconButton>\n          </div>\n        </div>\n        {\n          (loading) ? (\n            <div style={{width: \"100%\", height: \"auto\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                <CircularProgress size={50} />\n            </div>\n          ) : (\n            <List className={classes.root}>\n              {\n                reviews.map((review) =>\n                  <ListItem key={review.id} button disableRipple alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                      <Avatar src={review.reviewerProfilePicURL} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center'}}>\n                            <Typography\n                              component=\"span\"\n                              variant=\"body1\"\n                              className={classes.inline}\n                              color=\"textPrimary\"\n                            >\n                              <b>{review.reviewTitle}</b>\n                            </Typography>\n                            <Rating value={review.ratings / 10} readOnly />\n                          </div>\n                          <em>{review.attractionName}</em>\n                        </React.Fragment>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            Reviewed by {review.reviewerName} on {new Date(review.reviewDate).toLocaleDateString()}\n                          </Typography>\n                          <div />\n                          {review.reviewText}\n                          <div style={{marginTop: \"5px\"}} />\n                          <Link href={review.reviewURL}>\n                            {review.reviewURL}\n                          </Link>\n                          <div style={{marginTop: \"10px\"}} />\n                          <Fab variant=\"extended\">\n                            <b>Useful</b>\n                          </Fab>\n                          <span style={{marginLeft: \"20px\"}}>\n                            <Fab variant=\"extended\">\n                              <b>Not Useful</b>\n                            </Fab>\n                          </span>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                )\n              }\n            </List>   \n          )\n        }\n        {\n          !(loading) && (\n            <Divider variant=\"middle\" />\n          )\n        }\n        {\n          !(loading) && (reviews.length > 0) && (\n            <div>\n              <h5>Displaying {start+1} to {start+rowsPerPage > maxRowIndex ? maxRowIndex+1 : start+rowsPerPage} of {maxRowIndex+1} reviews.</h5>\n              <div>\n                <IconButton onClick={() => {handleChangeStart(start-rowsPerPage)}} disabled={start === 0 ? true : false} >\n                  <ArrowBackIosIcon />\n                </IconButton>\n                <IconButton onClick={() => {handleChangeStart(start+rowsPerPage)}} disabled={start+rowsPerPage > maxRowIndex ? true : false}>\n                  <ArrowForwardIosIcon />\n                </IconButton>\n              </div>\n            </div>\n          )\n        }\n      </div>\n      <div style={{marginTop: \"10px\"}}/>\n      <Snackbar \n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      open={errorBarOpen}\n      autoHideDuration={6000}\n      onClose={closeError}\n      message={errorText}\n      action={\n        <React.Fragment>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={closeError}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </React.Fragment>\n      }\n      />\n      <Dialog onClose={handleClose} open={dialogOpen}>\n        <DialogTitle><b>Sort</b></DialogTitle>\n        <DialogContent dividers>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel>Criteria</InputLabel>\n            <Select\n              value={sortCriteria}\n              onChange={(event) => {setSortCriteria(event.target.value)}}\n              label=\"Criteria\"\n            >\n              <MenuItem value={\"none\"}>None</MenuItem>\n              <MenuItem value={\"ratings\"}>Ratings</MenuItem>\n              <MenuItem value={\"compoundScore\"}>Sentiment</MenuItem>\n              <MenuItem value={\"usefulness_score\"}>Usefulness</MenuItem>\n            </Select>\n          </FormControl>\n          <div />\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Direction</FormLabel>\n            <RadioGroup value={sortDirection} onChange={(event) => {setSortDirection(event.target.value)}}>\n              <FormControlLabel value=\"desc\" control={<Radio />} label=\"Descending\" />\n              <FormControlLabel value=\"asc\" control={<Radio />} label=\"Ascending\" />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogTitle><b>Filter</b></DialogTitle>\n        <DialogContent dividers>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Sentiment</FormLabel>\n            <RadioGroup value={sentimentFilter} onChange={(event) => {setSentimentFilter(event.target.value)}}>\n              <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" />\n              <FormControlLabel value=\"Positive\" control={<Radio />} label=\"Postive\" />\n              <FormControlLabel value=\"Negative\" control={<Radio />} label=\"Negative\" />\n            </RadioGroup>\n          </FormControl>\n          <div />\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Usefulness</FormLabel>\n            <RadioGroup value={usefulnessFilter} onChange={(event) => {setUsefulnessFilter(event.target.value)}}>\n              <FormControlLabel value=\"All\" control={<Radio />} label=\"All\" />\n              <FormControlLabel value=\"useful\" control={<Radio />} label=\"Useful\" />\n              <FormControlLabel value=\"useless\" control={<Radio />} label=\"Not Useful\" />\n            </RadioGroup>\n          </FormControl>\n          <div />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel>Attraction</InputLabel>\n              <Select\n                value={attractionFilter}\n                onChange={(event) => {setAttractionFilter(event.target.value)}}\n                label=\"Attraction\"\n              >\n                {\n                  attractions.map((attraction) => \n                    <MenuItem value={`${attraction}`}>{attraction}</MenuItem>\n                  )\n                }\n              </Select>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}